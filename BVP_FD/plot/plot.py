import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

def plot(filename):
    x,y,z,w=np.loadtxt("./output/"+filename+".txt",delimiter=",",unpack=True)
    x=np.array(x).reshape(-1,1)
    y=np.array(y).reshape(-1,1)
    z=np.array(z).reshape(-1,1)
    w=np.array(w).reshape(-1,1)
    fig = plt.figure(figsize=(10,5))
    
    ax0 = fig.add_subplot(1,1,1)
    ax0.set_title(filename)
    ax0.set_xticks([])
    ax0.set_yticks([])
    ax0.axis('off')

    ax1 = fig.add_subplot(1,2,1,projection='3d')
    ax2 = fig.add_subplot(1,2,2,projection='3d')

    ax1.plot_wireframe(x,y,z,color="blue")
    ax2.plot_wireframe(x,y,w,color="red")

    ax1.set_xlabel('x')
    ax1.set_ylabel('y')
    ax1.set_title('Solution')
    ax2.set_xlabel('x')
    ax2.set_ylabel('y')
    ax2.set_title('Error')

    plt.savefig("./image/"+filename+".png")
    plt.close()

def hnormplot(filename,ax):
    n,max,two,one = np.loadtxt("./output/"+filename+".txt",delimiter=",",unpack=True)
    n=np.array(n).reshape(-1,1)
    h=1.0/n
    max=np.array(max).reshape(-1,1)
    two=np.array(two).reshape(-1,1)
    one=np.array(one).reshape(-1,1)
    ax.plot(h,max,label='max-norm')
    ax.plot(h,two,label='two-norm')
    ax.plot(h,one,label='one-norm')
    ax.legend()
    ax.set_xlabel('h')
    ax.set_title(filename)

def nnormplot(filename,ax):
    n,max,two,one = np.loadtxt("./output/"+filename+".txt",delimiter=",",unpack=True)
    n=np.array(n).reshape(-1,1)
    max=np.array(max).reshape(-1,1)
    two=np.array(two).reshape(-1,1)
    one=np.array(one).reshape(-1,1)
    ax.plot(n,max,label='max-norm')
    ax.plot(n,two,label='two-norm')
    ax.plot(n,one,label='one-norm')
    ax.legend()
    ax.set_xlabel('n')
    ax.set_title(filename)

plot("n8f1d")
plot("n8f1dcd")
plot("n8f1dcm")
plot("n8f1m")
plot("n8f1mcd")
plot("n8f1mcm")
plot("n16f1d")
plot("n16f1dcd")
plot("n16f1dcm")
plot("n16f1m")
plot("n16f1mcd")
plot("n16f1mcm")
plot("n32f1d")
plot("n32f1dcd")
plot("n32f1dcm")
plot("n32f1m")
plot("n32f1mcd")
plot("n32f1mcm")
plot("n64f1d")
plot("n64f1dcd")
plot("n64f1dcm")
plot("n64f1m")
plot("n64f1mcd")
plot("n64f1mcm")

fig = plt.figure(figsize=(15,10))
ax = fig.subplots(2,3)
hnormplot("f1d",ax[0,0])
hnormplot("f1dcd",ax[0,1])
hnormplot("f1dcm",ax[0,2])
hnormplot("f1m",ax[1,0])
hnormplot("f1mcd",ax[1,1])
hnormplot("f1mcm",ax[1,2])
plt.savefig("./image/hnorm.png")
plt.close()

fig = plt.figure(figsize=(15,10))
ax = fig.subplots(2,3)
nnormplot("f1d",ax[0,0])
nnormplot("f1dcd",ax[0,1])
nnormplot("f1dcm",ax[0,2])
nnormplot("f1m",ax[1,0])
nnormplot("f1mcd",ax[1,1])
nnormplot("f1mcm",ax[1,2])
plt.savefig("./image/nnorm.png")
plt.close()
# plot("test")